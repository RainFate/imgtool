{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","Content","WIDTH","HEIGHT","App","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","color","setColor","_useState5","_useState6","background","setBackground","useEffect","console","log","drawAvatar","context","document","querySelector","getContext","clearRect","fillStyle","beginPath","arc","Math","PI","closePath","fill","font","textAlign","fillText","_jsxs","children","_jsx","className","Row","Col","xs","sm","md","lg","xl","span","Input","maxLength","value","onInput","e","target","Popover","style","padding","content","SketchPicker","onChangeComplete","hex","Button","type","onClick","canvas","link","createElement","download","href","toDataURL","body","appendChild","click","remove","handleDownload","id","width","height","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1dc666e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { Row, Col, Input, Button, Popover, Layout } from 'antd';\nimport { SketchPicker } from 'react-color';\n\nimport './App.css';\n\nconst { Header, Content } = Layout;\n\nconst WIDTH = 300;\nconst HEIGHT = 300;\n\nfunction App() {\n\n  const [text, setText] = useState('杨明');\n  const [color, setColor] = useState('#ffffff');\n  const [background, setBackground] = useState('#0000ff');\n\n  useEffect(() => {\n    console.log(text, color, background);\n\n    drawAvatar()\n  }, [text, color, background]);\n\n\n  const drawAvatar = () => {\n    const canvas = document.querySelector('#avatar');\n    const context = canvas.getContext('2d');\n\n    context.clearRect(0, 0, WIDTH, HEIGHT);\n\n    context.fillStyle = background;\n\n    context.beginPath();\n    context.arc(WIDTH / 2, HEIGHT / 2, WIDTH / 2, 0, 2 * Math.PI, true);\n    context.closePath();\n    context.fill();\n\n    context.fillStyle = color;\n    context.font = HEIGHT / 2.2 + 'px \"Microsoft Yahei\"';\n    context.textAlign = 'center';\n\n    context.fillText(text, WIDTH / 2, HEIGHT / 1.5);\n  }\n\n  const handleDownload = () => {\n    const canvas = document.querySelector('#avatar');\n    const link = document.createElement('a');\n    link.download = 'avatar';\n    link.href = canvas.toDataURL('image/png');\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  }\n\n  return (\n    <Layout>\n      <Header>\n        <span className=\"header\">\n          头像工具\n        </span>\n      </Header>\n      <Content className=\"App\">\n        <div className=\"app-body\">\n          <Row>\n            <Col xs={24} sm={24} md={24} lg={12} xl={12}>\n              <Row>\n                <Col span={6}>内容：</Col>\n                <Col span={12}>\n                  <Input maxLength=\"2\" value={text} onInput={(e) => { setText(e.target.value) }} />\n                </Col>\n              </Row>\n              <Row>\n                <Col span={6}>文字颜色：</Col>\n                <Col span={12}>\n                  <Popover\n                    style={{ padding: 0 }}\n                    content={\n                      <SketchPicker\n                        color={color}\n                        onChangeComplete={(value) => setColor(value.hex)}\n                      />\n                    }>\n                    <Input maxLength=\"2\" value={color} onInput={(e) => { setColor(e.target.value) }} />\n                  </Popover>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={6}>背景颜色：</Col>\n                <Col span={12}>\n                  <Popover\n                    style={{ padding: 0 }}\n                    content={\n                      <SketchPicker\n                        color={background}\n                        onChangeComplete={(value) => setBackground(value.hex)}\n                      />\n                    }>\n                    <Input maxLength=\"2\" value={background} onInput={(e) => { setBackground(e.target.value) }} />\n                  </Popover>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={6}></Col>\n                <Col span={12}><Button type=\"primary\" onClick={() => { handleDownload() }}>下载图片</Button></Col>\n              </Row>\n            </Col>\n            <Col xs={24} sm={24} md={24} lg={12} xl={12}>\n              <canvas id=\"avatar\" width=\"300\" height=\"300\" />\n            </Col>\n          </Row>\n        </div>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}